local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\89\127","\46\119\81\200"),function(v42) if (v9(v42,2)==81) then v30=v8(v11(v42,1,1));return "";else local v99=0;local v100;while true do if (0==v99) then v100=v10(v8(v42,49 -33 ));if v30 then local v121=0;local v122;while true do if (0==v121) then v122=v13(v100,v30);v30=nil;v121=1;end if (v121==1) then return v122;end end else return v100;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v101=0;local v102;while true do if (v101==0) then v102=(v43/(2^(v44-1)))%(2^(((v45-(2 -1)) -(v44-1)) + 1)) ;return v102-(v102%1) ;end end else local v103=0;local v104;while true do if (v103==0) then v104=2^(v44-1) ;return (((v43%(v104 + v104))>=v104) and 1) or (0 -0) ;end end end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33() local v47,v48=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;return (v48 * 256) + v47 ;end local function v34() local v49=0;local v50;local v51;local v52;local v53;while true do if (v49==1) then return (v53 * 16777216) + (v52 * 65536) + (v51 * 256) + v50 ;end if (v49==0) then v50,v51,v52,v53=v9(v27,v29,v29 + (7 -4) );v29=v29 + (623 -(555 + 64)) ;v49=1;end end end local function v35() local v54=v34();local v55=v34();local v56=1;local v57=(v31(v55,1,20) * (2^32)) + v54 ;local v58=v31(v55,21,31);local v59=((v31(v55,32)==1) and  -1) or 1 ;if (v58==0) then if (v57==0) then return v59 * 0 ;else local v111=0;while true do if (v111==0) then v58=1;v56=0;break;end end end elseif (v58==(2978 -(857 + 74))) then return ((v57==(568 -(367 + 201))) and (v59 * (1/0))) or (v59 * NaN) ;end return v16(v59,v58-1023 ) * (v56 + (v57/((929 -(214 + 713))^52))) ;end local function v36(v60) local v61=0;local v62;local v63;while true do if (v61==2) then v63={};for v112=1, #v62 do v63[v112]=v10(v9(v11(v62,v112,v112)));end v61=3;end if (v61==0) then v62=nil;if  not v60 then v60=v34();if (v60==(0 + 0)) then return "";end end v61=1;end if (v61==1) then v62=v11(v27,v29,(v29 + v60) -(1 + 0) );v29=v29 + v60 ;v61=2;end if (3==v61) then return v14(v63);end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v64={};local v65={};local v66={};local v67={v64,v65,nil,v66};local v68=v34();local v69={};for v77=1,v68 do local v78=v32();local v79;if (v78==1) then v79=v32()~=(1637 -(1523 + 114)) ;elseif (v78==2) then v79=v35();elseif (v78==3) then v79=v36();end v69[v77]=v79;end v67[3]=v32();for v81=1 + 0 ,v34() do local v82=v32();if (v31(v82,1,1 -0 )==0) then local v107=0;local v108;local v109;local v110;while true do if (0==v107) then v108=v31(v82,2,1068 -(68 + 997) );v109=v31(v82,4,6);v107=1;end if (1==v107) then v110={v33(),v33(),nil,nil};if (v108==0) then local v123=0;while true do if (v123==0) then v110[3]=v33();v110[17 -13 ]=v33();break;end end elseif (v108==1) then v110[120 -(32 + 85) ]=v34();elseif (v108==2) then v110[3]=v34() -((2 + 0)^16) ;elseif (v108==3) then local v134=0;while true do if (0==v134) then v110[3]=v34() -(2^16) ;v110[4]=v33();break;end end end v107=2;end if (v107==3) then if (v31(v109,3,3)==1) then v110[4]=v69[v110[4]];end v64[v81]=v110;break;end if (v107==2) then if (v31(v109,1 + 0 ,1)==1) then v110[2]=v69[v110[959 -(892 + 65) ]];end if (v31(v109,4 -2 ,3 -1 )==(1 -0)) then v110[3]=v69[v110[3]];end v107=3;end end end end for v83=1,v34() do v65[v83-1 ]=v39();end return v67;end local function v40(v71,v72,v73) local v74=v71[1];local v75=v71[2];local v76=v71[3];return function(...) local v85=v74;local v86=v75;local v87=v76;local v88=v38;local v89=1;local v90= -1;local v91={};local v92={...};local v93=v20("#",...) -1 ;local v94={};local v95={};for v105=0,v93 do if (v105>=v87) then v91[v105-v87 ]=v92[v105 + 1 ];else v95[v105]=v92[v105 + 1 ];end end local v96=(v93-v87) + 1 ;local v97;local v98;while true do local v106=0;while true do if (v106==0) then v97=v85[v89];v98=v97[351 -(87 + 263) ];v106=1;end if (1==v106) then if (v98<=39) then if (v98<=(199 -(67 + 113))) then if (v98<=9) then if (v98<=4) then if (v98<=1) then if (v98>0) then local v137=v86[v97[3]];local v138;local v139={};v138=v18({},{[v7("\122\243\63\37\136\181\93","\208\37\172\86\75\236")]=function(v222,v223) local v224=0;local v225;while true do if (v224==0) then v225=v139[v223];return v225[1][v225[2]];end end end,[v7("\150\130\225\142\187\160\179\235\142\180","\204\201\221\143\235")]=function(v226,v227,v228) local v229=0;local v230;while true do if (v229==0) then v230=v139[v227];v230[1][v230[2]]=v228;break;end end end});for v231=1,v97[4] do local v232=0;local v233;while true do if (v232==0) then v89=v89 + 1 ;v233=v85[v89];v232=1;end if (v232==1) then if (v233[1]==65) then v139[v231-1 ]={v95,v233[3]};else v139[v231-1 ]={v72,v233[3]};end v94[ #v94 + 1 ]=v139;break;end end end v95[v97[2]]=v40(v137,v138,v73);elseif  not v95[v97[2]] then v89=v89 + 1 ;else v89=v97[3];end elseif (v98<=2) then local v141=0;local v142;local v143;local v144;while true do if (v141==0) then v142=v97[2];v143=v95[v142 + 2 ];v141=1;end if (v141==2) then if (v143>0) then if (v144<=v95[v142 + (2 -1) ]) then local v390=0;while true do if (v390==0) then v89=v97[3];v95[v142 + 3 ]=v144;break;end end end elseif (v144>=v95[v142 + 1 ]) then local v391=0;while true do if (v391==0) then v89=v97[3];v95[v142 + 3 ]=v144;break;end end end break;end if (v141==1) then v144=v95[v142] + v143 ;v95[v142]=v144;v141=2;end end elseif (v98>3) then v95[v97[2]]();else v95[v97[2]][v97[3]]=v95[v97[4]];end elseif (v98<=6) then if (v98==5) then if (v95[v97[2]]==v97[3 + 1 ]) then v89=v89 + (3 -2) ;else v89=v97[955 -(802 + 150) ];end else v95[v97[2]]=v97[3]~=0 ;end elseif (v98<=7) then v95[v97[2]][v95[v97[3]]]=v95[v97[4]];elseif (v98>(21 -13)) then v95[v97[2]][v95[v97[3]]]=v97[4];else v95[v97[2]]=v97[3] + v95[v97[4]] ;end elseif (v98<=14) then if (v98<=(19 -8)) then if (v98==10) then local v148=v97[2];v95[v148]=v95[v148](v21(v95,v148 + 1 ,v90));else local v150=v97[2 + 0 ];local v151=v95[v150];local v152=v97[3];for v234=1,v152 do v151[v234]=v95[v150 + v234 ];end end elseif (v98<=12) then for v237=v97[2],v97[3] do v95[v237]=nil;end elseif (v98==13) then v95[v97[2]]=v95[v97[3]]%v95[v97[4]] ;else local v266=0;local v267;while true do if (v266==0) then v267=v97[2];v95[v267]=v95[v267](v21(v95,v267 + 1 ,v97[3]));break;end end end elseif (v98<=16) then if (v98>15) then do return;end else local v153=v86[v97[3]];local v154;local v155={};v154=v18({},{[v7("\72\186\247\79\115\128\230","\33\23\229\158")]=function(v239,v240) local v241=0;local v242;while true do if (v241==0) then v242=v155[v240];return v242[1][v242[2]];end end end,[v7("\111\133\207\190\71\179\207\191\85\162","\219\48\218\161")]=function(v243,v244,v245) local v246=0;local v247;while true do if (v246==0) then v247=v155[v244];v247[1][v247[2]]=v245;break;end end end});for v248=998 -(915 + 82) ,v97[4] do local v249=0;local v250;while true do if (v249==1) then if (v250[1]==65) then v155[v248-1 ]={v95,v250[8 -5 ]};else v155[v248-1 ]={v72,v250[3]};end v94[ #v94 + 1 ]=v155;break;end if (v249==0) then v89=v89 + 1 ;v250=v85[v89];v249=1;end end end v95[v97[2]]=v40(v153,v154,v73);end elseif (v98<=17) then local v157=v97[2];local v158,v159=v88(v95[v157](v21(v95,v157 + 1 + 0 ,v97[3])));v90=(v159 + v157) -(1 -0) ;local v160=0;for v251=v157,v90 do local v252=0;while true do if (v252==0) then v160=v160 + 1 ;v95[v251]=v158[v160];break;end end end elseif (v98>18) then local v268=0;local v269;while true do if (0==v268) then v269=v97[2];v95[v269](v21(v95,v269 + 1 ,v90));break;end end else v95[v97[2]]=v95[v97[3]];end elseif (v98<=29) then if (v98<=24) then if (v98<=21) then if (v98>20) then v95[v97[1189 -(1069 + 118) ]]();else v95[v97[2]]=v73[v97[3]];end elseif (v98<=22) then local v163=v97[2];do return v95[v163](v21(v95,v163 + 1 ,v97[3]));end elseif (v98>23) then v95[v97[2]]=v97[3];else v95[v97[2]]= #v95[v97[3]];end elseif (v98<=26) then if (v98==25) then local v164=0;local v165;while true do if (v164==0) then v165=v97[2];do return v21(v95,v165,v90);end break;end end else v95[v97[2]]=v95[v97[6 -3 ]] + v97[4] ;end elseif (v98<=27) then if (v95[v97[2]]==v97[8 -4 ]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v98==28) then if v95[v97[2]] then v89=v89 + 1 ;else v89=v97[3];end else v95[v97[1 + 1 ]]=v95[v97[4 -1 ]] + v97[4] ;end elseif (v98<=34) then if (v98<=31) then if (v98==30) then v95[v97[2 + 0 ]][v97[3]]=v95[v97[4]];else local v169=0;local v170;local v171;local v172;while true do if (v169==0) then v170=v97[2];v171=v95[v170];v169=1;end if (v169==1) then v172=v95[v170 + 2 ];if (v172>(791 -(368 + 423))) then if (v171>v95[v170 + 1 ]) then v89=v97[3];else v95[v170 + 3 ]=v171;end elseif (v171<v95[v170 + (3 -2) ]) then v89=v97[3];else v95[v170 + 3 ]=v171;end break;end end end elseif (v98<=32) then v95[v97[2]]=v95[v97[3]][v97[4]];elseif (v98>33) then v95[v97[2]]= #v95[v97[21 -(10 + 8) ]];else do return v95[v97[2]]();end end elseif (v98<=36) then if (v98>35) then v95[v97[2]]=v40(v86[v97[3]],nil,v73);else for v253=v97[2],v97[11 -8 ] do v95[v253]=nil;end end elseif (v98<=37) then local v176=v97[2];v95[v176](v21(v95,v176 + 1 ,v90));elseif (v98==38) then v95[v97[2]]={};else local v279=v97[2];v95[v279]=v95[v279]();end elseif (v98<=59) then if (v98<=(491 -(416 + 26))) then if (v98<=44) then if (v98<=(130 -89)) then if (v98==40) then local v177=0;local v178;local v179;local v180;while true do if (v177==0) then v178=v97[2];v179=v95[v178];v177=1;end if (1==v177) then v180=v97[3];for v357=1,v180 do v179[v357]=v95[v178 + v357 ];end break;end end else local v181=0;local v182;while true do if (v181==0) then v182=v97[1 + 1 ];v95[v182](v21(v95,v182 + (1 -0) ,v97[3]));break;end end end elseif (v98<=42) then do return;end elseif (v98>(481 -(145 + 293))) then local v281=0;local v282;local v283;local v284;local v285;while true do if (v281==0) then v282=v97[2];v283,v284=v88(v95[v282](v95[v282 + (431 -(44 + 386)) ]));v281=1;end if (v281==1) then v90=(v284 + v282) -1 ;v285=0;v281=2;end if (v281==2) then for v385=v282,v90 do local v386=0;while true do if (v386==0) then v285=v285 + (1487 -(998 + 488)) ;v95[v385]=v283[v285];break;end end end break;end end else v95[v97[2]]=v95[v97[1 + 2 ]]%v97[4] ;end elseif (v98<=46) then if (v98==45) then local v183=0;local v184;local v185;local v186;local v187;while true do if (v183==0) then v184=v97[2];v185,v186=v88(v95[v184](v95[v184 + 1 ]));v183=1;end if (v183==2) then for v360=v184,v90 do local v361=0;while true do if (v361==0) then v187=v187 + 1 ;v95[v360]=v185[v187];break;end end end break;end if (v183==1) then v90=(v186 + v184) -(1 + 0) ;v187=0;v183=2;end end else v95[v97[2]]=v97[3];end elseif (v98<=47) then local v190=v97[2];v95[v190]=v95[v190](v21(v95,v190 + 1 ,v90));elseif (v98>48) then local v287=0;local v288;local v289;local v290;local v291;while true do if (v287==1) then v90=(v290 + v288) -1 ;v291=772 -(201 + 571) ;v287=2;end if (v287==0) then v288=v97[2];v289,v290=v88(v95[v288](v21(v95,v288 + 1 ,v90)));v287=1;end if (2==v287) then for v387=v288,v90 do local v388=0;while true do if (v388==0) then v291=v291 + 1 ;v95[v387]=v289[v291];break;end end end break;end end else local v292=0;local v293;local v294;while true do if (1==v292) then for v389=v293 + 1 ,v90 do v15(v294,v95[v389]);end break;end if (0==v292) then v293=v97[2];v294=v95[v293];v292=1;end end end elseif (v98<=54) then if (v98<=51) then if (v98==50) then v95[v97[1140 -(116 + 1022) ]][v95[v97[3]]]=v97[4];else local v194=v97[2];local v195,v196=v88(v95[v194](v21(v95,v194 + 1 ,v90)));v90=(v196 + v194) -(4 -3) ;local v197=0;for v255=v194,v90 do local v256=0;while true do if (v256==0) then v197=v197 + 1 + 0 ;v95[v255]=v195[v197];break;end end end end elseif (v98<=52) then local v198=v97[2];do return v21(v95,v198,v90);end elseif (v98>53) then v95[v97[2]]=v97[3] + v95[v97[4]] ;else local v296=v97[2];local v297=v95[v97[3]];v95[v296 + (3 -2) ]=v297;v95[v296]=v297[v97[4]];end elseif (v98<=56) then if (v98==55) then local v199=0;local v200;local v201;while true do if (v199==1) then v95[v200 + 1 ]=v201;v95[v200]=v201[v97[4]];break;end if (v199==0) then v200=v97[2];v201=v95[v97[3]];v199=1;end end else v95[v97[2]]={};end elseif (v98<=57) then v95[v97[2]]=v95[v97[3]]%v95[v97[4]] ;elseif (v98>58) then local v301=v97[2];local v302=v95[v301];for v340=v301 + 1 ,v97[3] do v15(v302,v95[v340]);end else local v303=v97[2];local v304,v305=v88(v95[v303](v21(v95,v303 + 1 ,v97[3])));v90=(v305 + v303) -(3 -2) ;local v306=0;for v341=v303,v90 do v306=v306 + 1 ;v95[v341]=v304[v306];end end elseif (v98<=(928 -(814 + 45))) then if (v98<=(157 -93)) then if (v98<=61) then if (v98>60) then v95[v97[2]]=v72[v97[3]];else local v206=v97[2];v95[v206]=v95[v206]();end elseif (v98<=62) then do return v95[v97[2]]();end elseif (v98>63) then local v307=0;local v308;local v309;local v310;while true do if (v307==0) then v308=v97[2];v309=v95[v308];v307=1;end if (1==v307) then v310=v95[v308 + 2 ];if (v310>0) then if (v309>v95[v308 + 1 ]) then v89=v97[3];else v95[v308 + 3 ]=v309;end elseif (v309<v95[v308 + 1 ]) then v89=v97[3];else v95[v308 + 3 ]=v309;end break;end end elseif v95[v97[2]] then v89=v89 + 1 ;else v89=v97[3];end elseif (v98<=66) then if (v98>65) then v95[v97[2]]=v73[v97[3]];else v95[v97[1 + 1 ]]=v95[v97[2 + 1 ]];end elseif (v98<=67) then v95[v97[2]]=v40(v86[v97[3]],nil,v73);elseif (v98>68) then v95[v97[2]][v95[v97[3]]]=v95[v97[4]];elseif  not v95[v97[2]] then v89=v89 + 1 ;else v89=v97[3];end elseif (v98<=74) then if (v98<=71) then if (v98==(955 -(261 + 624))) then local v213=v97[2];local v214=v95[v213];for v257=v213 + 1 ,v90 do v15(v214,v95[v257]);end else v95[v97[2]]=v97[3]~=0 ;end elseif (v98<=72) then v89=v97[4 -1 ];elseif (v98>73) then v95[v97[2]]=v72[v97[3]];else v89=v97[3];end elseif (v98<=77) then if (v98<=75) then local v217=v97[2];do return v95[v217](v21(v95,v217 + 1 ,v97[3]));end elseif (v98==76) then v95[v97[2]]=v95[v97[3]][v97[4]];else local v318=0;local v319;while true do if (v318==0) then v319=v97[2];v95[v319]=v95[v319](v21(v95,v319 + 1 ,v97[3]));break;end end end elseif (v98<=78) then local v218=v97[1082 -(1020 + 60) ];local v219=v95[v218 + 2 ];local v220=v95[v218] + v219 ;v95[v218]=v220;if (v219>0) then if (v220<=v95[v218 + 1 ]) then local v366=0;while true do if (v366==0) then v89=v97[3];v95[v218 + 3 ]=v220;break;end end end elseif (v220>=v95[v218 + 1 ]) then local v367=0;while true do if (v367==0) then v89=v97[3];v95[v218 + 3 ]=v220;break;end end end elseif (v98==79) then local v320=0;local v321;while true do if (0==v320) then v321=v97[2];v95[v321](v21(v95,v321 + (1424 -(630 + 793)) ,v97[3]));break;end end else v95[v97[2]]=v95[v97[3]]%v97[4] ;end v89=v89 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
